% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stat-confidence-density.R
\docType{data}
\name{stat_confidence_density}
\alias{stat_confidence_density}
\alias{StatConfidenceDensity}
\title{Confidence density distributions generated from estimate and margin of error}
\source{
Adrian W. Bowman. Graphs for Uncertainty. J. R. Statist. Soc. A 182:1-16, 2018.
\url{http://www.rss.org.uk/Images/PDF/events/2018/Bowman-5-Sept-2018.pdf}
}
\usage{
stat_confidence_density(mapping = NULL, data = NULL, geom = "tile",
  position = "identity", ..., confidence = 0.95, xlim = NULL,
  n = 501, na.rm = FALSE, show.legend = FALSE, inherit.aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[=aes]{aes()}} or
\code{\link[=aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[=ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[=fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data.}

\item{geom}{The geometric object to use display the data}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[=layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{confidence}{The confidence level used to calculate the \code{moe} statistic.
This defaults to 0.95 (\code{moe} corresponds to 95\% confidence interval).}

\item{xlim}{Numeric vector of two numbers setting the range of x values to be
covered by the confidence density. If not supplied, is taken from the x scale.}

\item{n}{Number of equally spaced points at which the density is calculated.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[=borders]{borders()}}.}
}
\description{
This stat generates normal densities from provided estimates plus margins
of error (at a specified confidence level). It can be used to estimate
the confidence density that underlies a given parameter estimate with
given margin of error.
}
\section{Details}{


The following aesthetics are understood by this stat (required aesthetics
are in bold):
\itemize{
\item \strong{\code{x}}: The estimate whose uncertainty is to be displayed
\item \strong{\code{moe}}: Margin of error
\item \code{confidence}: Confidence level used to calculate the \code{moe} statistic.
This defaults to 0.95 (\code{moe} corresponds to 95\% confidence interval).
}
}

\examples{
library(ggplot2)
library(dplyr)

cacao_small <- cacao \%>\%
  filter(location \%in\% c("Switzerland", "Canada", "U.S.A.", "Belgium"))

cacao_summary <- cacao_small \%>\%
  group_by(location) \%>\%
  summarize(
    sd = sd(rating),
    moe = sd*1.96,
    rating = mean(rating)
  )

ggplot(cacao_summary, aes(x = rating, y = location)) +
  stat_confidence_density(aes(moe = moe, fill = stat(ndensity)), height = 0.8) +
  geom_point(data = cacao_small, position = position_jitter(width = 0.05), size = 0.3) +
  geom_errorbarh(
    aes(xmin = rating - sd, xmax = rating + sd),
    height = 0.3, color = "darkred", size = 1
  ) +
  geom_point(size = 3, color = "darkred") +
  theme_minimal()


library(ggridges)

cacao_se <- cacao_small \%>\%
  group_by(location) \%>\%
  summarize(
    se = sd(rating)/sqrt(n()),
    moe = se*1.96,
    rating = mean(rating)
  )

ggplot(cacao_se, aes(x = rating, y = location)) +
  stat_confidence_density(
    geom = "ridgeline",
    aes(moe = moe, height = stat(density)),
    alpha = NA, xlim = c(2.5, 3.75), scale = 0.08
  ) +
  theme_minimal()
}
\keyword{datasets}
